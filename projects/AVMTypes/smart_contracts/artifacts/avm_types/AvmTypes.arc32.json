{
    "hints": {
        "stringReadonly(string)string": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "string(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "stringArray(string[])string[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "bytes(byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "boolean(bool)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "biguint(uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "struct((address,uint256))(address,uint256)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "data": {
                    "name": "structAddressUint256",
                    "elements": [
                        [
                            "address",
                            "address"
                        ],
                        [
                            "uint256",
                            "uint256"
                        ]
                    ]
                },
                "output": {
                    "name": "structAddressUint256",
                    "elements": [
                        [
                            "address",
                            "address"
                        ],
                        [
                            "uint256",
                            "uint256"
                        ]
                    ]
                }
            }
        },
        "innerStruct((uint64,(address,uint256)))(uint64,(address,uint256))": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "data": {
                    "name": "innerStruct",
                    "elements": [
                        [
                            "num",
                            "uint64"
                        ],
                        [
                            "struct",
                            "(address,uint256)"
                        ]
                    ]
                },
                "output": {
                    "name": "innerStruct",
                    "elements": [
                        [
                            "num",
                            "uint64"
                        ],
                        [
                            "struct",
                            "(address,uint256)"
                        ]
                    ]
                }
            }
        },
        "PaymentTxn(pay)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "ApplicationCallTxn(appl)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "AssetTransferTxn(axfer)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "KeyRegistrationTxn(keyreg)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "Transaction(txn)byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4StaticBytes8(byte[8])byte[8]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4StaticBytes32(byte[32])byte[32]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4StaticBytes1020(byte[1020])byte[1020]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4DynamicBytes(byte[])byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4Address(address)address": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4Bool(bool)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4Byte(byte)byte": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4DynamicArrayOfStruct((address,uint256)[])(address,uint256)[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4StaticArrayOf2Bytes(byte[2])byte[2]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4StaticArrayOf2Structs((address,uint256)[2])(address,uint256)[2]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UFixed8x16(ufixed8x16)ufixed8x16": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UFixed512x160(ufixed512x160)ufixed512x160": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN8(uint8)uint8": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN512(uint512)uint512": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN128Alias(uint128)uint128": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN16Alias(uint16)uint16": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN256Alias(uint256)uint256": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN64Alias(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4UintN8Alias(uint8)uint8": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "AvmTypes",
        "methods": [
            {
                "name": "stringReadonly",
                "args": [
                    {
                        "type": "string",
                        "name": "data"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "string",
                "args": [
                    {
                        "type": "string",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "stringArray",
                "args": [
                    {
                        "type": "string[]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string[]"
                }
            },
            {
                "name": "bytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "boolean",
                "args": [
                    {
                        "type": "bool",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "biguint",
                "args": [
                    {
                        "type": "uint512",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "struct",
                "args": [
                    {
                        "type": "(address,uint256)",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(address,uint256)"
                }
            },
            {
                "name": "innerStruct",
                "args": [
                    {
                        "type": "(uint64,(address,uint256))",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(uint64,(address,uint256))"
                }
            },
            {
                "name": "PaymentTxn",
                "args": [
                    {
                        "type": "pay",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "ApplicationCallTxn",
                "args": [
                    {
                        "type": "appl",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "AssetTransferTxn",
                "args": [
                    {
                        "type": "axfer",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "KeyRegistrationTxn",
                "args": [
                    {
                        "type": "keyreg",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "Transaction",
                "args": [
                    {
                        "type": "txn",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "arc4StaticBytes8",
                "args": [
                    {
                        "type": "byte[8]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[8]"
                }
            },
            {
                "name": "arc4StaticBytes32",
                "args": [
                    {
                        "type": "byte[32]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[32]"
                }
            },
            {
                "name": "arc4StaticBytes1020",
                "args": [
                    {
                        "type": "byte[1020]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[1020]"
                }
            },
            {
                "name": "arc4DynamicBytes",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "arc4Address",
                "args": [
                    {
                        "type": "address",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "address"
                }
            },
            {
                "name": "arc4Bool",
                "args": [
                    {
                        "type": "bool",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "arc4Byte",
                "args": [
                    {
                        "type": "byte",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte"
                }
            },
            {
                "name": "arc4DynamicArrayOfStruct",
                "args": [
                    {
                        "type": "(address,uint256)[]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(address,uint256)[]"
                }
            },
            {
                "name": "arc4StaticArrayOf2Bytes",
                "args": [
                    {
                        "type": "byte[2]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "byte[2]"
                }
            },
            {
                "name": "arc4StaticArrayOf2Structs",
                "args": [
                    {
                        "type": "(address,uint256)[2]",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(address,uint256)[2]"
                }
            },
            {
                "name": "arc4UFixed8x16",
                "args": [
                    {
                        "type": "ufixed8x16",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed8x16"
                }
            },
            {
                "name": "arc4UFixed512x160",
                "args": [
                    {
                        "type": "ufixed512x160",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "ufixed512x160"
                }
            },
            {
                "name": "arc4UintN8",
                "args": [
                    {
                        "type": "uint8",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint8"
                }
            },
            {
                "name": "arc4UintN512",
                "args": [
                    {
                        "type": "uint512",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint512"
                }
            },
            {
                "name": "arc4UintN128Alias",
                "args": [
                    {
                        "type": "uint128",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint128"
                }
            },
            {
                "name": "arc4UintN16Alias",
                "args": [
                    {
                        "type": "uint16",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint16"
                }
            },
            {
                "name": "arc4UintN256Alias",
                "args": [
                    {
                        "type": "uint256",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint256"
                }
            },
            {
                "name": "arc4UintN64Alias",
                "args": [
                    {
                        "type": "uint64",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "arc4UintN8Alias",
                "args": [
                    {
                        "type": "uint8",
                        "name": "data"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint8"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}